{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE projects\\\\Frontend-Testing_QP\\\\src\\\\views\\\\question-paper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport * as faceapi from \"face-api.js\";\nimport \"./question-paper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"How many Keywords are there in C Programming language ?\",\n  options: [\"23\", \"32\", \"33\", \"43\"],\n  correctAnswerIndex: 1,\n  choosenAnswer: null\n}\n// ... (keep your other questions exactly as they were)\n];\nconst QuestionPaper = props => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState(Array(questions.length).fill(null));\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const loadModels = async () => {\n      try {\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)]);\n        startVideoStream();\n      } catch (err) {\n        console.error(\"Failed to load models:\", err);\n      }\n    };\n    const startVideoStream = () => {\n      navigator.mediaDevices.getUserMedia({\n        video: true\n      }).then(stream => {\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      }).catch(err => console.error(\"Camera error:\", err));\n    };\n    loadModels();\n    const videoElement = videoRef.current;\n    return () => {\n      if (videoElement && videoElement.srcObject) {\n        videoElement.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const handleOptionClick = optionIndex => {\n    const newSelections = [...selectedOptions];\n    newSelections[currentQuestionIndex] = optionIndex;\n    setSelectedOptions(newSelections);\n    if (optionIndex === questions[currentQuestionIndex].correctAnswerIndex && currentQuestionIndex < questions.length - 1) {\n      setTimeout(() => setCurrentQuestionIndex(prev => prev + 1), 500);\n    }\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Exam Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option-btn ${selectedOptions[currentQuestionIndex] === index ? \"selected\" : \"\"}`,\n          onClick: () => handleOptionClick(index),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"overlay-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/exam-ended\",\n      className: \"submit-btn\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionPaper, \"I0/+XEkl4bWzpGCvnHGwMpyUbtk=\");\n_c = QuestionPaper;\nexport default QuestionPaper;\nvar _c;\n$RefreshReg$(_c, \"QuestionPaper\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Helmet","Link","faceapi","jsxDEV","_jsxDEV","questions","question","options","correctAnswerIndex","choosenAnswer","QuestionPaper","props","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","Array","length","fill","videoRef","canvasRef","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","startVideoStream","err","console","error","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","videoElement","getTracks","forEach","track","stop","handleOptionClick","optionIndex","newSelections","setTimeout","prev","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","ref","autoPlay","muted","playsInline","to","_c","$RefreshReg$"],"sources":["D:/CSE projects/Frontend-Testing_QP/src/views/question-paper.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport \"./question-paper.css\";\r\n\r\nconst questions = [\r\n  {\r\n    question: \"How many Keywords are there in C Programming language ?\",\r\n    options: [\"23\", \"32\", \"33\", \"43\"],\r\n    correctAnswerIndex: 1,\r\n    choosenAnswer: null,\r\n  },\r\n  // ... (keep your other questions exactly as they were)\r\n];\r\n\r\nconst QuestionPaper = (props) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState(Array(questions.length).fill(null));\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      try {\r\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\r\n        ]);\r\n        startVideoStream();\r\n      } catch (err) {\r\n        console.error(\"Failed to load models:\", err);\r\n      }\r\n    };\r\n\r\n    const startVideoStream = () => {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then((stream) => {\r\n          if (videoRef.current) {\r\n            videoRef.current.srcObject = stream;\r\n          }\r\n        })\r\n        .catch((err) => console.error(\"Camera error:\", err));\r\n    };\r\n\r\n    loadModels();\r\n\r\n    const videoElement = videoRef.current;\r\n    return () => {\r\n      if (videoElement && videoElement.srcObject) {\r\n        videoElement.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleOptionClick = (optionIndex) => {\r\n    const newSelections = [...selectedOptions];\r\n    newSelections[currentQuestionIndex] = optionIndex;\r\n    setSelectedOptions(newSelections);\r\n\r\n    if (optionIndex === questions[currentQuestionIndex].correctAnswerIndex && \r\n        currentQuestionIndex < questions.length - 1) {\r\n      setTimeout(() => setCurrentQuestionIndex(prev => prev + 1), 500);\r\n    }\r\n  };\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  return (\r\n    <div className=\"question-container\">\r\n      <Helmet>\r\n        <title>Exam Portal</title>\r\n      </Helmet>\r\n\r\n      <div className=\"question-content\">\r\n        <div className=\"question-text\">\r\n          <h2>{currentQuestion.question}</h2>\r\n        </div>\r\n        \r\n        <div className=\"options-grid\">\r\n          {currentQuestion.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              className={`option-btn ${selectedOptions[currentQuestionIndex] === index ? \"selected\" : \"\"}`}\r\n              onClick={() => handleOptionClick(index)}\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"camera-container\">\r\n        <div className=\"video-wrapper\">\r\n          <video ref={videoRef} autoPlay muted playsInline></video>\r\n          <canvas ref={canvasRef} className=\"overlay-canvas\"></canvas>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/exam-ended\" className=\"submit-btn\">\r\n        Submit\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionPaper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}