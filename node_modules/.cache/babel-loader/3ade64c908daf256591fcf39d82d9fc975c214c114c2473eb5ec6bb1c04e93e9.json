{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE projects\\\\Frontend-Testing_QP\\\\src\\\\views\\\\question-paper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport * as faceapi from \"face-api.js\";\nimport \"./question-paper.css\";\n\n// Questions data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUESTIONS = [{\n  question: \"How many Keywords are there in C Programming language?\",\n  options: [\"23\", \"32\", \"33\", \"43\"],\n  correctAnswerIndex: 1\n}\n// ... rest of your questions\n];\n\n// Memoized Option Button Component\nconst OptionButton = /*#__PURE__*/React.memo(_c = ({\n  option,\n  index,\n  isSelected,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: `question-paper-option-btn ${isSelected ? 'selected' : ''}`,\n  onClick: () => onClick(index),\n  \"aria-pressed\": isSelected,\n  children: option\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this));\n_c2 = OptionButton;\nOptionButton.propTypes = {\n  option: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nconst QuestionPaper = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState(Array(QUESTIONS.length).fill(null));\n  const [isModelsLoaded, setIsModelsLoaded] = useState(false);\n  const [webcamError, setWebcamError] = useState(null);\n  const detectionInterval = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Handle option selection\n  const handleOptionClick = useCallback(optionIndex => {\n    const newSelections = [...selectedOptions];\n    newSelections[currentQuestionIndex] = optionIndex;\n    setSelectedOptions(newSelections);\n    const isCorrect = optionIndex === QUESTIONS[currentQuestionIndex].correctAnswerIndex;\n    if (isCorrect && currentQuestionIndex < QUESTIONS.length - 1) {\n      setTimeout(() => setCurrentQuestionIndex(prev => prev + 1), 500);\n    }\n  }, [currentQuestionIndex, selectedOptions]);\n\n  // Start video stream\n  const startVideoStream = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"user\"\n        }\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Error accessing webcam:\", err);\n      setWebcamError(\"Could not access webcam. Please check permissions.\");\n    }\n  }, []);\n\n  // Face detection processing\n  const processFaceDetection = useCallback(async () => {\n    if (!videoRef.current || !canvasRef.current || videoRef.current.readyState < 2) {\n      return;\n    }\n    try {\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n      const displaySize = {\n        width: videoRef.current.videoWidth,\n        height: videoRef.current.videoHeight\n      };\n      faceapi.matchDimensions(canvasRef.current, displaySize);\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      faceapi.draw.drawDetections(canvasRef.current, resizedDetections);\n      faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDetections);\n      faceapi.draw.drawFaceExpressions(canvasRef.current, resizedDetections);\n    } catch (error) {\n      console.error(\"Face detection error:\", error);\n    }\n  }, []);\n\n  // Load models and setup video\n  useEffect(() => {\n    let isMounted = true;\n    const loadModels = async () => {\n      try {\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)]);\n        if (isMounted) {\n          setIsModelsLoaded(true);\n          startVideoStream();\n        }\n      } catch (err) {\n        console.error(\"Failed to load Face API models:\", err);\n      }\n    };\n    loadModels();\n    return () => {\n      var _videoRef$current;\n      isMounted = false;\n      if (detectionInterval.current) {\n        cancelAnimationFrame(detectionInterval.current);\n      }\n      if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [startVideoStream]);\n\n  // Setup face detection loop\n  useEffect(() => {\n    const videoEl = videoRef.current;\n    const handlePlay = () => {\n      const processFrame = async () => {\n        if (isModelsLoaded) {\n          await processFaceDetection();\n        }\n        detectionInterval.current = requestAnimationFrame(processFrame);\n      };\n      detectionInterval.current = requestAnimationFrame(processFrame);\n    };\n    if (videoEl) {\n      videoEl.addEventListener(\"play\", handlePlay);\n    }\n    return () => {\n      if (videoEl) {\n        videoEl.removeEventListener(\"play\", handlePlay);\n      }\n      if (detectionInterval.current) {\n        cancelAnimationFrame(detectionInterval.current);\n      }\n    };\n  }, [isModelsLoaded, processFaceDetection]);\n  const currentQuestion = QUESTIONS[currentQuestionIndex];\n  const allAnswered = selectedOptions.every(option => option !== null);\n  const progressPercentage = (currentQuestionIndex + 1) / QUESTIONS.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-paper-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Online Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-paper-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-glass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-paper-progress-bar\",\n          style: {\n            width: `${progressPercentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-grid\",\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n              option: option,\n              index: index,\n              isSelected: selectedOptions[currentQuestionIndex] === index,\n              onClick: handleOptionClick\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"webcam-panel\",\n          children: [webcamError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"webcam-error\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: webcamError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"webcam-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              autoPlay: true,\n              muted: true,\n              playsInline: true,\n              className: \"webcam-video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              className: \"webcam-canvas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-navigation\",\n            children: QUESTIONS.map((_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setCurrentQuestionIndex(i),\n              className: `nav-btn ${currentQuestionIndex === i ? 'active' : ''}`,\n              \"aria-label\": `Question ${i + 1}`,\n              children: i + 1\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/exam-ended\",\n            className: `submit-btn ${!allAnswered ? 'disabled' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: !allAnswered,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionPaper, \"4V/TQdTZYsuQAOU5yg2l7+fKUG0=\");\n_c3 = QuestionPaper;\nexport default QuestionPaper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"OptionButton$React.memo\");\n$RefreshReg$(_c2, \"OptionButton\");\n$RefreshReg$(_c3, \"QuestionPaper\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","PropTypes","Helmet","Link","faceapi","jsxDEV","_jsxDEV","QUESTIONS","question","options","correctAnswerIndex","OptionButton","memo","_c","option","index","isSelected","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","propTypes","string","isRequired","number","bool","func","QuestionPaper","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","Array","length","fill","isModelsLoaded","setIsModelsLoaded","webcamError","setWebcamError","detectionInterval","videoRef","canvasRef","handleOptionClick","optionIndex","newSelections","isCorrect","setTimeout","prev","startVideoStream","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","err","console","error","processFaceDetection","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","displaySize","width","videoWidth","height","videoHeight","matchDimensions","resizedDetections","resizeResults","ctx","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","drawFaceExpressions","isMounted","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","_videoRef$current","cancelAnimationFrame","getTracks","forEach","track","stop","videoEl","handlePlay","processFrame","requestAnimationFrame","addEventListener","removeEventListener","currentQuestion","allAnswered","every","progressPercentage","style","map","ref","autoPlay","muted","playsInline","_","i","to","disabled","_c3","$RefreshReg$"],"sources":["D:/CSE projects/Frontend-Testing_QP/src/views/question-paper.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport \"./question-paper.css\";\r\n\r\n// Questions data\r\nconst QUESTIONS = [\r\n  {\r\n    question: \"How many Keywords are there in C Programming language?\",\r\n    options: [\"23\", \"32\", \"33\", \"43\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  // ... rest of your questions\r\n];\r\n\r\n// Memoized Option Button Component\r\nconst OptionButton = React.memo(({ option, index, isSelected, onClick }) => (\r\n  <button\r\n    className={`question-paper-option-btn ${isSelected ? 'selected' : ''}`}\r\n    onClick={() => onClick(index)}\r\n    aria-pressed={isSelected}\r\n  >\r\n    {option}\r\n  </button>\r\n));\r\n\r\nOptionButton.propTypes = {\r\n  option: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst QuestionPaper = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState(\r\n    Array(QUESTIONS.length).fill(null)\r\n  );\r\n  const [isModelsLoaded, setIsModelsLoaded] = useState(false);\r\n  const [webcamError, setWebcamError] = useState(null);\r\n  \r\n  const detectionInterval = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Handle option selection\r\n  const handleOptionClick = useCallback(\r\n    (optionIndex) => {\r\n      const newSelections = [...selectedOptions];\r\n      newSelections[currentQuestionIndex] = optionIndex;\r\n      setSelectedOptions(newSelections);\r\n\r\n      const isCorrect = \r\n        optionIndex === QUESTIONS[currentQuestionIndex].correctAnswerIndex;\r\n      \r\n      if (isCorrect && currentQuestionIndex < QUESTIONS.length - 1) {\r\n        setTimeout(() => setCurrentQuestionIndex((prev) => prev + 1), 500);\r\n      }\r\n    },\r\n    [currentQuestionIndex, selectedOptions]\r\n  );\r\n\r\n  // Start video stream\r\n  const startVideoStream = useCallback(async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: { facingMode: \"user\" } \r\n      });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error accessing webcam:\", err);\r\n      setWebcamError(\"Could not access webcam. Please check permissions.\");\r\n    }\r\n  }, []);\r\n\r\n  // Face detection processing\r\n  const processFaceDetection = useCallback(async () => {\r\n    if (!videoRef.current || !canvasRef.current || videoRef.current.readyState < 2) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const detections = await faceapi\r\n        .detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceExpressions();\r\n\r\n      const displaySize = {\r\n        width: videoRef.current.videoWidth,\r\n        height: videoRef.current.videoHeight,\r\n      };\r\n      \r\n      faceapi.matchDimensions(canvasRef.current, displaySize);\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n      \r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n      \r\n      faceapi.draw.drawDetections(canvasRef.current, resizedDetections);\r\n      faceapi.draw.drawFaceLandmarks(canvasRef.current, resizedDetections);\r\n      faceapi.draw.drawFaceExpressions(canvasRef.current, resizedDetections);\r\n    } catch (error) {\r\n      console.error(\"Face detection error:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Load models and setup video\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const loadModels = async () => {\r\n      try {\r\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\r\n        ]);\r\n        \r\n        if (isMounted) {\r\n          setIsModelsLoaded(true);\r\n          startVideoStream();\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to load Face API models:\", err);\r\n      }\r\n    };\r\n\r\n    loadModels();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (detectionInterval.current) {\r\n        cancelAnimationFrame(detectionInterval.current);\r\n      }\r\n      if (videoRef.current?.srcObject) {\r\n        videoRef.current.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, [startVideoStream]);\r\n\r\n  // Setup face detection loop\r\n  useEffect(() => {\r\n    const videoEl = videoRef.current;\r\n    \r\n    const handlePlay = () => {\r\n      const processFrame = async () => {\r\n        if (isModelsLoaded) {\r\n          await processFaceDetection();\r\n        }\r\n        detectionInterval.current = requestAnimationFrame(processFrame);\r\n      };\r\n      detectionInterval.current = requestAnimationFrame(processFrame);\r\n    };\r\n\r\n    if (videoEl) {\r\n      videoEl.addEventListener(\"play\", handlePlay);\r\n    }\r\n\r\n    return () => {\r\n      if (videoEl) {\r\n        videoEl.removeEventListener(\"play\", handlePlay);\r\n      }\r\n      if (detectionInterval.current) {\r\n        cancelAnimationFrame(detectionInterval.current);\r\n      }\r\n    };\r\n  }, [isModelsLoaded, processFaceDetection]);\r\n\r\n  const currentQuestion = QUESTIONS[currentQuestionIndex];\r\n  const allAnswered = selectedOptions.every(option => option !== null);\r\n  const progressPercentage = ((currentQuestionIndex + 1) / QUESTIONS.length) * 100;\r\n\r\n  return (\r\n    <div className=\"question-paper-container\">\r\n      <Helmet>\r\n        <title>Online Exam</title>\r\n      </Helmet>\r\n\r\n      <div className=\"question-paper-wrapper\">\r\n        <div className=\"question-paper-background\"></div>\r\n        <div className=\"question-paper-glass\"></div>\r\n\r\n        {/* Progress Bar */}\r\n        <div className=\"question-paper-progress\">\r\n          <div \r\n            className=\"question-paper-progress-bar\" \r\n            style={{ width: `${progressPercentage}%` }}\r\n          ></div>\r\n        </div>\r\n\r\n        {/* Question Panel */}\r\n        <div className=\"question-paper-content\">\r\n          <div className=\"question-panel\">\r\n            <div className=\"question-text\">\r\n              <span>{currentQuestion.question}</span>\r\n            </div>\r\n\r\n            <div className=\"options-grid\">\r\n              {currentQuestion.options.map((option, index) => (\r\n                <OptionButton\r\n                  key={index}\r\n                  option={option}\r\n                  index={index}\r\n                  isSelected={selectedOptions[currentQuestionIndex] === index}\r\n                  onClick={handleOptionClick}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Webcam Panel */}\r\n          <div className=\"webcam-panel\">\r\n            {webcamError ? (\r\n              <div className=\"webcam-error\">\r\n                <p>{webcamError}</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"webcam-container\">\r\n                <video\r\n                  ref={videoRef}\r\n                  autoPlay\r\n                  muted\r\n                  playsInline\r\n                  className=\"webcam-video\"\r\n                />\r\n                <canvas ref={canvasRef} className=\"webcam-canvas\" />\r\n              </div>\r\n            )}\r\n\r\n            {/* Question Navigation */}\r\n            <div className=\"question-navigation\">\r\n              {QUESTIONS.map((_, i) => (\r\n                <button\r\n                  key={i}\r\n                  onClick={() => setCurrentQuestionIndex(i)}\r\n                  className={`nav-btn ${currentQuestionIndex === i ? 'active' : ''}`}\r\n                  aria-label={`Question ${i + 1}`}\r\n                >\r\n                  {i + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <Link \r\n              to=\"/exam-ended\" \r\n              className={`submit-btn ${!allAnswered ? 'disabled' : ''}`}\r\n            >\r\n              <button disabled={!allAnswered}>\r\n                Submit\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionPaper;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,KAAKC,OAAO,MAAM,aAAa;AACtC,OAAO,sBAAsB;;AAE7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,wDAAwD;EAClEC,OAAO,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACjCC,kBAAkB,EAAE;AACtB;AACA;AAAA,CACD;;AAED;AACA,MAAMC,YAAY,gBAAGf,KAAK,CAACgB,IAAI,CAAAC,EAAA,GAACA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAQ,CAAC,kBACrEX,OAAA;EACEY,SAAS,EAAE,6BAA6BF,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;EACvEC,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACF,KAAK,CAAE;EAC9B,gBAAcC,UAAW;EAAAG,QAAA,EAExBL;AAAM;EAAAM,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACT,CAAC;AAACC,GAAA,GARGb,YAAY;AAUlBA,YAAY,CAACc,SAAS,GAAG;EACvBX,MAAM,EAAEb,SAAS,CAACyB,MAAM,CAACC,UAAU;EACnCZ,KAAK,EAAEd,SAAS,CAAC2B,MAAM,CAACD,UAAU;EAClCX,UAAU,EAAEf,SAAS,CAAC4B,IAAI,CAACF,UAAU;EACrCV,OAAO,EAAEhB,SAAS,CAAC6B,IAAI,CAACH;AAC1B,CAAC;AAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CACpDwC,KAAK,CAAC9B,SAAS,CAAC+B,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CACnC,CAAC;EACD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC6C,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM+C,iBAAiB,GAAG9C,MAAM,CAAC,IAAI,CAAC;EACtC,MAAM+C,QAAQ,GAAG/C,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMgD,SAAS,GAAGhD,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMiD,iBAAiB,GAAG/C,WAAW,CAClCgD,WAAW,IAAK;IACf,MAAMC,aAAa,GAAG,CAAC,GAAGd,eAAe,CAAC;IAC1Cc,aAAa,CAAChB,oBAAoB,CAAC,GAAGe,WAAW;IACjDZ,kBAAkB,CAACa,aAAa,CAAC;IAEjC,MAAMC,SAAS,GACbF,WAAW,KAAKzC,SAAS,CAAC0B,oBAAoB,CAAC,CAACvB,kBAAkB;IAEpE,IAAIwC,SAAS,IAAIjB,oBAAoB,GAAG1B,SAAS,CAAC+B,MAAM,GAAG,CAAC,EAAE;MAC5Da,UAAU,CAAC,MAAMjB,uBAAuB,CAAEkB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IACpE;EACF,CAAC,EACD,CAACnB,oBAAoB,EAAEE,eAAe,CACxC,CAAC;;EAED;EACA,MAAMkB,gBAAgB,GAAGrD,WAAW,CAAC,YAAY;IAC/C,IAAI;MACF,MAAMsD,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAO;MAC9B,CAAC,CAAC;MACF,IAAId,QAAQ,CAACe,OAAO,EAAE;QACpBf,QAAQ,CAACe,OAAO,CAACC,SAAS,GAAGP,MAAM;MACrC;IACF,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC7CnB,cAAc,CAAC,oDAAoD,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMsB,oBAAoB,GAAGjE,WAAW,CAAC,YAAY;IACnD,IAAI,CAAC6C,QAAQ,CAACe,OAAO,IAAI,CAACd,SAAS,CAACc,OAAO,IAAIf,QAAQ,CAACe,OAAO,CAACM,UAAU,GAAG,CAAC,EAAE;MAC9E;IACF;IAEA,IAAI;MACF,MAAMC,UAAU,GAAG,MAAM/D,OAAO,CAC7BgE,cAAc,CAACvB,QAAQ,CAACe,OAAO,EAAE,IAAIxD,OAAO,CAACiE,uBAAuB,CAAC,CAAC,CAAC,CACvEC,iBAAiB,CAAC,CAAC,CACnBC,mBAAmB,CAAC,CAAC;MAExB,MAAMC,WAAW,GAAG;QAClBC,KAAK,EAAE5B,QAAQ,CAACe,OAAO,CAACc,UAAU;QAClCC,MAAM,EAAE9B,QAAQ,CAACe,OAAO,CAACgB;MAC3B,CAAC;MAEDxE,OAAO,CAACyE,eAAe,CAAC/B,SAAS,CAACc,OAAO,EAAEY,WAAW,CAAC;MACvD,MAAMM,iBAAiB,GAAG1E,OAAO,CAAC2E,aAAa,CAACZ,UAAU,EAAEK,WAAW,CAAC;MAExE,MAAMQ,GAAG,GAAGlC,SAAS,CAACc,OAAO,CAACqB,UAAU,CAAC,IAAI,CAAC;MAC9CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEpC,SAAS,CAACc,OAAO,CAACa,KAAK,EAAE3B,SAAS,CAACc,OAAO,CAACe,MAAM,CAAC;MAEtEvE,OAAO,CAAC+E,IAAI,CAACC,cAAc,CAACtC,SAAS,CAACc,OAAO,EAAEkB,iBAAiB,CAAC;MACjE1E,OAAO,CAAC+E,IAAI,CAACE,iBAAiB,CAACvC,SAAS,CAACc,OAAO,EAAEkB,iBAAiB,CAAC;MACpE1E,OAAO,CAAC+E,IAAI,CAACG,mBAAmB,CAACxC,SAAS,CAACc,OAAO,EAAEkB,iBAAiB,CAAC;IACxE,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjE,SAAS,CAAC,MAAM;IACd,IAAIwF,SAAS,GAAG,IAAI;IAEpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,SAAS;QACpD,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChB1F,OAAO,CAAC2F,IAAI,CAACC,gBAAgB,CAACC,WAAW,CAACR,SAAS,CAAC,EACpDrF,OAAO,CAAC2F,IAAI,CAACG,iBAAiB,CAACD,WAAW,CAACR,SAAS,CAAC,EACrDrF,OAAO,CAAC2F,IAAI,CAACI,kBAAkB,CAACF,WAAW,CAACR,SAAS,CAAC,EACtDrF,OAAO,CAAC2F,IAAI,CAACK,iBAAiB,CAACH,WAAW,CAACR,SAAS,CAAC,CACtD,CAAC;QAEF,IAAIF,SAAS,EAAE;UACb9C,iBAAiB,CAAC,IAAI,CAAC;UACvBY,gBAAgB,CAAC,CAAC;QACpB;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEF,GAAG,CAAC;MACvD;IACF,CAAC;IAED0B,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MAAA,IAAAa,iBAAA;MACXd,SAAS,GAAG,KAAK;MACjB,IAAI3C,iBAAiB,CAACgB,OAAO,EAAE;QAC7B0C,oBAAoB,CAAC1D,iBAAiB,CAACgB,OAAO,CAAC;MACjD;MACA,KAAAyC,iBAAA,GAAIxD,QAAQ,CAACe,OAAO,cAAAyC,iBAAA,eAAhBA,iBAAA,CAAkBxC,SAAS,EAAE;QAC/BhB,QAAQ,CAACe,OAAO,CAACC,SAAS,CAAC0C,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACvE;IACF,CAAC;EACH,CAAC,EAAE,CAACrD,gBAAgB,CAAC,CAAC;;EAEtB;EACAtD,SAAS,CAAC,MAAM;IACd,MAAM4G,OAAO,GAAG9D,QAAQ,CAACe,OAAO;IAEhC,MAAMgD,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;QAC/B,IAAIrE,cAAc,EAAE;UAClB,MAAMyB,oBAAoB,CAAC,CAAC;QAC9B;QACArB,iBAAiB,CAACgB,OAAO,GAAGkD,qBAAqB,CAACD,YAAY,CAAC;MACjE,CAAC;MACDjE,iBAAiB,CAACgB,OAAO,GAAGkD,qBAAqB,CAACD,YAAY,CAAC;IACjE,CAAC;IAED,IAAIF,OAAO,EAAE;MACXA,OAAO,CAACI,gBAAgB,CAAC,MAAM,EAAEH,UAAU,CAAC;IAC9C;IAEA,OAAO,MAAM;MACX,IAAID,OAAO,EAAE;QACXA,OAAO,CAACK,mBAAmB,CAAC,MAAM,EAAEJ,UAAU,CAAC;MACjD;MACA,IAAIhE,iBAAiB,CAACgB,OAAO,EAAE;QAC7B0C,oBAAoB,CAAC1D,iBAAiB,CAACgB,OAAO,CAAC;MACjD;IACF,CAAC;EACH,CAAC,EAAE,CAACpB,cAAc,EAAEyB,oBAAoB,CAAC,CAAC;EAE1C,MAAMgD,eAAe,GAAG1G,SAAS,CAAC0B,oBAAoB,CAAC;EACvD,MAAMiF,WAAW,GAAG/E,eAAe,CAACgF,KAAK,CAACrG,MAAM,IAAIA,MAAM,KAAK,IAAI,CAAC;EACpE,MAAMsG,kBAAkB,GAAI,CAACnF,oBAAoB,GAAG,CAAC,IAAI1B,SAAS,CAAC+B,MAAM,GAAI,GAAG;EAEhF,oBACEhC,OAAA;IAAKY,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCb,OAAA,CAACJ,MAAM;MAAAiB,QAAA,eACLb,OAAA;QAAAa,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAETjB,OAAA;MAAKY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCb,OAAA;QAAKY,SAAS,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjDjB,OAAA;QAAKY,SAAS,EAAC;MAAsB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAG5CjB,OAAA;QAAKY,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCb,OAAA;UACEY,SAAS,EAAC,6BAA6B;UACvCmG,KAAK,EAAE;YAAE5C,KAAK,EAAE,GAAG2C,kBAAkB;UAAI;QAAE;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNjB,OAAA;QAAKY,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCb,OAAA;UAAKY,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7Bb,OAAA;YAAKY,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC5Bb,OAAA;cAAAa,QAAA,EAAO8F,eAAe,CAACzG;YAAQ;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eAENjB,OAAA;YAAKY,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1B8F,eAAe,CAACxG,OAAO,CAAC6G,GAAG,CAAC,CAACxG,MAAM,EAAEC,KAAK,kBACzCT,OAAA,CAACK,YAAY;cAEXG,MAAM,EAAEA,MAAO;cACfC,KAAK,EAAEA,KAAM;cACbC,UAAU,EAAEmB,eAAe,CAACF,oBAAoB,CAAC,KAAKlB,KAAM;cAC5DE,OAAO,EAAE8B;YAAkB,GAJtBhC,KAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKX,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNjB,OAAA;UAAKY,SAAS,EAAC,cAAc;UAAAC,QAAA,GAC1BuB,WAAW,gBACVpC,OAAA;YAAKY,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3Bb,OAAA;cAAAa,QAAA,EAAIuB;YAAW;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,gBAENjB,OAAA;YAAKY,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/Bb,OAAA;cACEiH,GAAG,EAAE1E,QAAS;cACd2E,QAAQ;cACRC,KAAK;cACLC,WAAW;cACXxG,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eACFjB,OAAA;cAAQiH,GAAG,EAAEzE,SAAU;cAAC5B,SAAS,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CACN,eAGDjB,OAAA;YAAKY,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EACjCZ,SAAS,CAAC+G,GAAG,CAAC,CAACK,CAAC,EAAEC,CAAC,kBAClBtH,OAAA;cAEEW,OAAO,EAAEA,CAAA,KAAMiB,uBAAuB,CAAC0F,CAAC,CAAE;cAC1C1G,SAAS,EAAE,WAAWe,oBAAoB,KAAK2F,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;cACnE,cAAY,YAAYA,CAAC,GAAG,CAAC,EAAG;cAAAzG,QAAA,EAE/ByG,CAAC,GAAG;YAAC,GALDA,CAAC;cAAAxG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMA,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGNjB,OAAA,CAACH,IAAI;YACH0H,EAAE,EAAC,aAAa;YAChB3G,SAAS,EAAE,cAAc,CAACgG,WAAW,GAAG,UAAU,GAAG,EAAE,EAAG;YAAA/F,QAAA,eAE1Db,OAAA;cAAQwH,QAAQ,EAAE,CAACZ,WAAY;cAAA/F,QAAA,EAAC;YAEhC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACS,EAAA,CApOID,aAAa;AAAAgG,GAAA,GAAbhG,aAAa;AAsOnB,eAAeA,aAAa;AAAC,IAAAlB,EAAA,EAAAW,GAAA,EAAAuG,GAAA;AAAAC,YAAA,CAAAnH,EAAA;AAAAmH,YAAA,CAAAxG,GAAA;AAAAwG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}