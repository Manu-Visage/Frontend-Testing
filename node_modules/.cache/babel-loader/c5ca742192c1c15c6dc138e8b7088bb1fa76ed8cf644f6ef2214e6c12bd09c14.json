{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE projects\\\\Frontend-Testing_QP\\\\src\\\\views\\\\question-paper.js\",\n  _s = $RefreshSig$();\n// src/components/question-paper.js\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport * as faceapi from \"face-api.js\";\nimport \"./question-paper.css\";\n\n// Questions data (moved outside component to prevent recreation on re-renders)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"How many Keywords are there in C Programming language ?\",\n  options: [\"23\", \"32\", \"33\", \"43\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"Which of the following functions takes A console Input in Python ?\",\n  options: [\"get()\", \"input()\", \"gets()\", \"scan()\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"Which of the following is the capital of India ?\",\n  options: [\"Mumbai\", \"Delhi\", \"Chennai\", \"Lucknow\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"Which of The Following is must to Execute a Python Code ?\",\n  options: [\"TURBO C\", \"Py Interpreter\", \"Notepad\", \"IDE\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"The Taj Mahal is located in  ?\",\n  options: [\"Patna\", \"Delhi\", \"Benaras\", \"Agra\"],\n  correctAnswerIndex: 3\n}, {\n  question: \"The append Method adds value to the list at the ?\",\n  options: [\"custom location\", \"end\", \"center\", \"beginning\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"In which year '@' sign was first chosen for its use in e-mail address\",\n  options: [\"1976\", \"1980\", \"1977\", \"1972\"],\n  correctAnswerIndex: 3\n}, {\n  question: \"Which of the following is not a costal city of india ?\",\n  options: [\"Bengluru\", \"Kochin\", \"Mumbai\", \"vishakhapatnam\"],\n  correctAnswerIndex: 0\n}, {\n  question: \"Which of The following is executed in browser(client side) ?\",\n  options: [\"perl\", \"css\", \"python\", \"java\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"Which of the following keyword is used to create a function in Python ?\",\n  options: [\"function\", \"void\", \"fun\", \"def\"],\n  correctAnswerIndex: 3\n}, {\n  question: \"To Declare a Global variable in python we use the keyword ?\",\n  options: [\"all\", \"var\", \"let\", \"global\"],\n  correctAnswerIndex: 3\n}, {\n  question: \"Who was the 1st President of India\",\n  options: [\"Jawaharlal Nehru\", \"Rajendra Prasad\", \"Indira Gandhi\", \"Sarvepalli Radhakrishnan\"],\n  correctAnswerIndex: 1\n}, {\n  question: \"Which one of the followings is a programming language\",\n  options: [\"HTTP\", \"HTML\", \"HPML\", \"FTP\"],\n  correctAnswerIndex: 1\n}];\n\n// Memoized Option Button Component to prevent unnecessary re-renders\nconst OptionButton = /*#__PURE__*/React.memo(_c = ({\n  option,\n  index,\n  isSelected,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: `question-paper-rectangle8${index}`,\n  onClick: () => onClick(index),\n  style: {\n    backgroundColor: isSelected ? \"rgb(137, 144, 137)\" : \"white\"\n  },\n  \"aria-pressed\": isSelected,\n  children: option\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 3\n}, this));\n_c2 = OptionButton;\nOptionButton.propTypes = {\n  option: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nconst QuestionPaper = () => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState(Array(questions.length).fill(null));\n  const [isModelsLoaded, setIsModelsLoaded] = useState(false);\n  const detectionInterval = useRef(null);\n\n  // Refs for video and canvas\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Handle option selection\n  const handleOptionClick = useCallback(optionIndex => {\n    const newSelections = [...selectedOptions];\n    newSelections[currentQuestionIndex] = optionIndex;\n    setSelectedOptions(newSelections);\n    const isCorrect = optionIndex === questions[currentQuestionIndex].correctAnswerIndex;\n    // If correct and not last, auto-advance after 0.5s\n    if (isCorrect && currentQuestionIndex < questions.length - 1) {\n      setTimeout(() => {\n        setCurrentQuestionIndex(prev => prev + 1);\n      }, 500);\n    }\n  }, [currentQuestionIndex, selectedOptions]);\n\n  // Start video stream\n  const startVideoStream = useCallback(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: {}\n    }).then(stream => {\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    }).catch(err => {\n      console.error(\"Error accessing webcam:\", err);\n      // You might want to set some state here to show an error message to the user\n    });\n  }, []);\n\n  // Face detection processing\n  const processFaceDetection = useCallback(async () => {\n    const videoEl = videoRef.current;\n    const canvasEl = canvasRef.current;\n    if (!videoEl || !canvasEl || videoEl.readyState < 2) return;\n    try {\n      const detections = await faceapi.detectAllFaces(videoEl, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n      const displaySize = {\n        width: videoEl.videoWidth,\n        height: videoEl.videoHeight\n      };\n      faceapi.matchDimensions(canvasEl, displaySize);\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      const ctx = canvasEl.getContext(\"2d\");\n      ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);\n      faceapi.draw.drawDetections(canvasEl, resizedDetections);\n      faceapi.draw.drawFaceLandmarks(canvasEl, resizedDetections);\n      faceapi.draw.drawFaceExpressions(canvasEl, resizedDetections);\n    } catch (error) {\n      console.error(\"Face detection error:\", error);\n    }\n  }, []);\n\n  // Load Face API models and setup video\n  useEffect(() => {\n    let isMounted = true;\n    const loadModels = async () => {\n      try {\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n        await Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)]);\n        if (isMounted) {\n          setIsModelsLoaded(true);\n          startVideoStream();\n        }\n      } catch (err) {\n        console.error(\"Failed to load Face API models:\", err);\n      }\n    };\n    loadModels();\n    return () => {\n      isMounted = false;\n      if (detectionInterval.current) {\n        cancelAnimationFrame(detectionInterval.current);\n      }\n    };\n  }, [startVideoStream]);\n\n  // Setup face detection when video starts playing\n  useEffect(() => {\n    const videoEl = videoRef.current;\n    const handlePlay = () => {\n      const processFrame = async () => {\n        if (isModelsLoaded) {\n          await processFaceDetection();\n        }\n        detectionInterval.current = requestAnimationFrame(processFrame);\n      };\n      detectionInterval.current = requestAnimationFrame(processFrame);\n    };\n    if (videoEl) {\n      videoEl.addEventListener(\"play\", handlePlay);\n    }\n    return () => {\n      if (videoEl) {\n        videoEl.removeEventListener(\"play\", handlePlay);\n      }\n      if (detectionInterval.current) {\n        cancelAnimationFrame(detectionInterval.current);\n      }\n    };\n  }, [isModelsLoaded, processFaceDetection]);\n  const currentQuestion = questions[currentQuestionIndex];\n  const allAnswered = selectedOptions.every(option => option !== null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-paper-container1\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Online Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-paper-question-paper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-glass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-group44\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-paper-question\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-paper-text10\",\n            children: currentQuestion.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n          option: option,\n          index: index,\n          isSelected: selectedOptions[currentQuestionIndex] === index,\n          onClick: handleOptionClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-container2\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Webcam background\",\n          src: \"/external/rectangle781502-xkiw-500w.png\",\n          className: \"question-paper-rectangle78\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-paper-webcam\",\n          style: {\n            position: \"relative\",\n            width: \"100%\",\n            maxWidth: \"300px\",\n            aspectRatio: \"4/3\",\n            overflow: \"hidden\",\n            borderRadius: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            muted: true,\n            playsInline: true,\n            width: \"100%\",\n            height: \"100%\",\n            style: {\n              position: \"top\",\n              top: 0,\n              left: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: \"300\",\n            height: \"225\",\n            style: {\n              position: \"absolute\",\n              top: 0,\n              left: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-paper-group43\",\n          children: questions.map((_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setCurrentQuestionIndex(i),\n            style: {\n              backgroundColor: currentQuestionIndex === i ? \"#818080\" : \"rgb(132, 170, 223)\"\n            },\n            className: `question-paper-group${33 + i}`,\n            \"aria-label\": `Question ${i + 1}`,\n            \"aria-current\": currentQuestionIndex === i ? \"true\" : \"false\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `question-paper-text${20 - i}`,\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-paper-submit\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/exam-ended\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"question-paper-text21\",\n            disabled: !allAnswered,\n            \"aria-disabled\": !allAnswered,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionPaper, \"0M9epcvXjYxZpn/yN3qj8jR9BSM=\");\n_c3 = QuestionPaper;\nexport default QuestionPaper;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"OptionButton$React.memo\");\n$RefreshReg$(_c2, \"OptionButton\");\n$RefreshReg$(_c3, \"QuestionPaper\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","PropTypes","Helmet","Link","faceapi","jsxDEV","_jsxDEV","questions","question","options","correctAnswerIndex","OptionButton","memo","_c","option","index","isSelected","onClick","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","propTypes","string","isRequired","number","bool","func","QuestionPaper","_s","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","Array","length","fill","isModelsLoaded","setIsModelsLoaded","detectionInterval","videoRef","canvasRef","handleOptionClick","optionIndex","newSelections","isCorrect","setTimeout","prev","startVideoStream","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","processFaceDetection","videoEl","canvasEl","readyState","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","displaySize","width","videoWidth","height","videoHeight","matchDimensions","resizedDetections","resizeResults","ctx","getContext","clearRect","draw","drawDetections","drawFaceLandmarks","drawFaceExpressions","isMounted","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","cancelAnimationFrame","handlePlay","processFrame","requestAnimationFrame","addEventListener","removeEventListener","currentQuestion","allAnswered","every","map","alt","src","position","maxWidth","aspectRatio","overflow","borderRadius","ref","autoPlay","muted","playsInline","top","left","_","i","to","disabled","_c3","$RefreshReg$"],"sources":["D:/CSE projects/Frontend-Testing_QP/src/views/question-paper.js"],"sourcesContent":["// src/components/question-paper.js\r\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as faceapi from \"face-api.js\";\r\nimport \"./question-paper.css\";\r\n\r\n// Questions data (moved outside component to prevent recreation on re-renders)\r\nconst questions = [\r\n  {\r\n    question: \"How many Keywords are there in C Programming language ?\",\r\n    options: [\"23\", \"32\", \"33\", \"43\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"Which of the following functions takes A console Input in Python ?\",\r\n    options: [\"get()\", \"input()\", \"gets()\", \"scan()\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"Which of the following is the capital of India ?\",\r\n    options: [\"Mumbai\", \"Delhi\", \"Chennai\", \"Lucknow\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"Which of The Following is must to Execute a Python Code ?\",\r\n    options: [\"TURBO C\", \"Py Interpreter\", \"Notepad\", \"IDE\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"The Taj Mahal is located in  ?\",\r\n    options: [\"Patna\", \"Delhi\", \"Benaras\", \"Agra\"],\r\n    correctAnswerIndex: 3,\r\n  },\r\n  {\r\n    question: \"The append Method adds value to the list at the ?\",\r\n    options: [\"custom location\", \"end\", \"center\", \"beginning\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"In which year '@' sign was first chosen for its use in e-mail address\",\r\n    options: [\"1976\", \"1980\", \"1977\", \"1972\"],\r\n    correctAnswerIndex: 3,\r\n  },\r\n  {\r\n    question: \"Which of the following is not a costal city of india ?\",\r\n    options: [\"Bengluru\", \"Kochin\", \"Mumbai\", \"vishakhapatnam\"],\r\n    correctAnswerIndex: 0,\r\n  },\r\n  {\r\n    question: \"Which of The following is executed in browser(client side) ?\",\r\n    options: [\"perl\", \"css\", \"python\", \"java\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"Which of the following keyword is used to create a function in Python ?\",\r\n    options: [\"function\", \"void\", \"fun\", \"def\"],\r\n    correctAnswerIndex: 3,\r\n  },\r\n  {\r\n    question: \"To Declare a Global variable in python we use the keyword ?\",\r\n    options: [\"all\", \"var\", \"let\", \"global\"],\r\n    correctAnswerIndex: 3,\r\n  },\r\n  {\r\n    question: \"Who was the 1st President of India\",\r\n    options: [\"Jawaharlal Nehru\", \"Rajendra Prasad\", \"Indira Gandhi\", \"Sarvepalli Radhakrishnan\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n  {\r\n    question: \"Which one of the followings is a programming language\",\r\n    options: [\"HTTP\", \"HTML\", \"HPML\", \"FTP\"],\r\n    correctAnswerIndex: 1,\r\n  },\r\n];\r\n\r\n// Memoized Option Button Component to prevent unnecessary re-renders\r\nconst OptionButton = React.memo(({ option, index, isSelected, onClick }) => (\r\n  <button\r\n    className={`question-paper-rectangle8${index}`}\r\n    onClick={() => onClick(index)}\r\n    style={{\r\n      backgroundColor: isSelected ? \"rgb(137, 144, 137)\" : \"white\",\r\n    }}\r\n    aria-pressed={isSelected}\r\n  >\r\n    {option}\r\n  </button>\r\n));\r\n\r\nOptionButton.propTypes = {\r\n  option: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst QuestionPaper = () => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedOptions, setSelectedOptions] = useState(Array(questions.length).fill(null));\r\n  const [isModelsLoaded, setIsModelsLoaded] = useState(false);\r\n  const detectionInterval = useRef(null);\r\n\r\n  // Refs for video and canvas\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Handle option selection\r\n  const handleOptionClick = useCallback((optionIndex) => {\r\n    const newSelections = [...selectedOptions];\r\n    newSelections[currentQuestionIndex] = optionIndex;\r\n    setSelectedOptions(newSelections);\r\n\r\n    const isCorrect = optionIndex === questions[currentQuestionIndex].correctAnswerIndex;\r\n    // If correct and not last, auto-advance after 0.5s\r\n    if (isCorrect && currentQuestionIndex < questions.length - 1) {\r\n      setTimeout(() => {\r\n        setCurrentQuestionIndex((prev) => prev + 1);\r\n      }, 500);\r\n    }\r\n  }, [currentQuestionIndex, selectedOptions]);\r\n\r\n  // Start video stream\r\n  const startVideoStream = useCallback(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({ video: {} })\r\n      .then((stream) => {\r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error accessing webcam:\", err);\r\n        // You might want to set some state here to show an error message to the user\r\n      });\r\n  }, []);\r\n\r\n  // Face detection processing\r\n  const processFaceDetection = useCallback(async () => {\r\n    const videoEl = videoRef.current;\r\n    const canvasEl = canvasRef.current;\r\n    if (!videoEl || !canvasEl || videoEl.readyState < 2) return;\r\n\r\n    try {\r\n      const detections = await faceapi\r\n        .detectAllFaces(videoEl, new faceapi.TinyFaceDetectorOptions())\r\n        .withFaceLandmarks()\r\n        .withFaceExpressions();\r\n\r\n      const displaySize = {\r\n        width: videoEl.videoWidth,\r\n        height: videoEl.videoHeight,\r\n      };\r\n      faceapi.matchDimensions(canvasEl, displaySize);\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n      \r\n      const ctx = canvasEl.getContext(\"2d\");\r\n      ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);\r\n      \r\n      faceapi.draw.drawDetections(canvasEl, resizedDetections);\r\n      faceapi.draw.drawFaceLandmarks(canvasEl, resizedDetections);\r\n      faceapi.draw.drawFaceExpressions(canvasEl, resizedDetections);\r\n    } catch (error) {\r\n      console.error(\"Face detection error:\", error);\r\n    }\r\n  }, []);\r\n\r\n  // Load Face API models and setup video\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    const loadModels = async () => {\r\n      try {\r\n        const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n          faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL),\r\n        ]);\r\n        if (isMounted) {\r\n          setIsModelsLoaded(true);\r\n          startVideoStream();\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Failed to load Face API models:\", err);\r\n      }\r\n    };\r\n\r\n    loadModels();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      if (detectionInterval.current) {\r\n        cancelAnimationFrame(detectionInterval.current);\r\n      }\r\n    };\r\n  }, [startVideoStream]);\r\n\r\n  // Setup face detection when video starts playing\r\n  useEffect(() => {\r\n    const videoEl = videoRef.current;\r\n    \r\n    const handlePlay = () => {\r\n      const processFrame = async () => {\r\n        if (isModelsLoaded) {\r\n          await processFaceDetection();\r\n        }\r\n        detectionInterval.current = requestAnimationFrame(processFrame);\r\n      };\r\n      detectionInterval.current = requestAnimationFrame(processFrame);\r\n    };\r\n\r\n    if (videoEl) {\r\n      videoEl.addEventListener(\"play\", handlePlay);\r\n    }\r\n\r\n    return () => {\r\n      if (videoEl) {\r\n        videoEl.removeEventListener(\"play\", handlePlay);\r\n      }\r\n      if (detectionInterval.current) {\r\n        cancelAnimationFrame(detectionInterval.current);\r\n      }\r\n    };\r\n  }, [isModelsLoaded, processFaceDetection]);\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n  const allAnswered = selectedOptions.every(option => option !== null);\r\n\r\n  return (\r\n    <div className=\"question-paper-container1\">\r\n      <Helmet>\r\n        <title>Online Exam</title>\r\n      </Helmet>\r\n\r\n      <div className=\"question-paper-question-paper\">\r\n        <div className=\"question-paper-background\"></div>\r\n        <div className=\"question-paper-glass\"></div>\r\n\r\n        {/* QUESTION & OPTION PANEL */}\r\n        <div className=\"question-paper-group44\">\r\n          <div className=\"question-paper-question\">\r\n            <span className=\"question-paper-text10\">\r\n              {currentQuestion.question}\r\n            </span>\r\n          </div>\r\n\r\n          {currentQuestion.options.map((option, index) => (\r\n            <OptionButton\r\n              key={index}\r\n              option={option}\r\n              index={index}\r\n              isSelected={selectedOptions[currentQuestionIndex] === index}\r\n              onClick={handleOptionClick}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/* VIDEO + FACE DETECTION + QUESTION NAV */}\r\n        <div className=\"question-paper-container2\">\r\n          <img\r\n            alt=\"Webcam background\"\r\n            src=\"/external/rectangle781502-xkiw-500w.png\"\r\n            className=\"question-paper-rectangle78\"\r\n          />\r\n\r\n          {/* Webcam with face detection overlay */}\r\n          <div\r\n            className=\"question-paper-webcam\"\r\n            style={{\r\n              position: \"relative\",\r\n              width: \"100%\",\r\n              maxWidth: \"300px\",\r\n              aspectRatio: \"4/3\",\r\n              overflow: \"hidden\",\r\n              borderRadius: \"8px\",\r\n            }}\r\n          >\r\n            <video\r\n              ref={videoRef}\r\n              autoPlay\r\n              muted\r\n              playsInline\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              style={{ position: \"top\", top: 0, left: 0 }}\r\n            />\r\n            <canvas\r\n              ref={canvasRef}\r\n              width=\"300\"\r\n              height=\"225\"\r\n              style={{ position: \"absolute\", top: 0, left: 0 }}\r\n            />\r\n          </div>\r\n\r\n          {/* QUESTION NAV BUTTONS */}\r\n          <div className=\"question-paper-group43\">\r\n            {questions.map((_, i) => (\r\n              <button\r\n                key={i}\r\n                onClick={() => setCurrentQuestionIndex(i)}\r\n                style={{\r\n                  backgroundColor:\r\n                    currentQuestionIndex === i ? \"#818080\" : \"rgb(132, 170, 223)\",\r\n                }}\r\n                className={`question-paper-group${33 + i}`}\r\n                aria-label={`Question ${i + 1}`}\r\n                aria-current={currentQuestionIndex === i ? \"true\" : \"false\"}\r\n              >\r\n                <span className={`question-paper-text${20 - i}`}>\r\n                  {i + 1}\r\n                </span>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* SUBMIT BUTTON */}\r\n        <div className=\"question-paper-submit\">\r\n          <Link to=\"/exam-ended\">\r\n            <button \r\n              className=\"question-paper-text21\"\r\n              disabled={!allAnswered}\r\n              aria-disabled={!allAnswered}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionPaper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}